# Sample GitLab CI/CD configuration file to build and deploy a Java WAR file
# It downloads JAR files from GitLab Package Registry, builds, and deploys

stages:
  - build
  - deploy

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  GITLAB_REGISTRY_TOKEN: "$CI_JOB_TOKEN"

before_script:
  - export MAVEN_OPTS="$MAVEN_OPTS -Dmaven.wagon.http.pool=false"

download_dependencies:
  stage: build
  image: maven:3.8.4-jdk-11
  script:
    - echo "//gitlab.com/api/v4/projects/<PROJECT_ID>/packages/maven" > .m2/settings.xml
    - echo "<servers><server><id>gitlab-maven</id><configuration><httpHeaders><property><name>Private-Token</name><value>$GITLAB_REGISTRY_TOKEN</value></property></httpHeaders></configuration></server></servers>" >> .m2/settings.xml
    - mvn -DskipTests -Dmaven.repo.local=.m2/repository dependency:copy-dependencies
    - mvn -DskipTests -Dmaven.repo.local=.m2/repository clean package

deploy_job:
  stage: deploy
  image: alpine
  before_script:
    - apk add --no-cache openssh-client
  script:
    - scp target/*.war user@your-server-ip:/path/to/deployment/directory

# Optionally, you can add deployment only on tags or specific branches
# deploy:
#   only:
#     - master
#   when: manual

